/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.view;

import com.mycompany.processing.News;
import com.mycompany.processing.SearchFunction;
import com.mycompany.processing.Service;
import java.awt.CardLayout;
import java.awt.image.BufferedImage;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URL;
import java.nio.charset.StandardCharsets;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vu
 */
public class CrawlHistoryPanel extends javax.swing.JPanel {

    /**
     * Creates new form CrawlHistoryPanel
     */
    Service control = new Service();
    SearchFunction func = new SearchFunction();
    String title, date, path;
    ArrayList<String> keys;
    News Info = new News();
    int i=0;
    
    public void updateTable(){
        ArrayList<ArrayList<String>> websiteList = new ArrayList<ArrayList<String>>();
        websiteList = control.getTitleAndDate();
        DefaultTableModel df = (DefaultTableModel)listTable.getModel();
        df.setRowCount(0);
        for(ArrayList<String> i: websiteList){
            df.addRow(new Object[]{i.get(0), i.get(1)});
        }
    }
    
    public void updateSearchResult(ArrayList<ArrayList<String>> result){
        DefaultTableModel df = (DefaultTableModel)resultTable.getModel();
        df.setRowCount(0);
        for(ArrayList<String> i: result){
            df.addRow(new Object[]{i.get(0), i.get(1)});
        }
    }
    
    public void reset(){
        titleSearchTextField.setText("");
        authorSearchTextField.setText("");
        crawlStartDateChooser.setCalendar(null);
        crawlEndDateChooser.setCalendar(null);
        startDateTimeChooser.setCalendar(null);
        endDateTimeChooser.setCalendar(null);
    }
    
    CardLayout cardLayout;
    public CrawlHistoryPanel() {
        initComponents();
        try{
            URL link = new URL("https://i.imgur.com/UTu9deC.png");
            BufferedImage image = ImageIO.read(link);
            jLabel10.setIcon(new ImageIcon(image));
        }catch(Exception ex){
            
        }
    
        try{
            URL link = new URL("https://i.imgur.com/SONoUH5.jpeg");
            BufferedImage image = ImageIO.read(link);
            jLabel12.setIcon(new ImageIcon(image));
        }catch(Exception ex){
            
        }
        updateTable();
        cardLayout = (CardLayout)(dynamicPanel.getLayout());
        cardLayout.show(dynamicPanel, "card1");
        
        contentPanel.setVisible(false);
        
        titleTextArea.setEditable(false);
        linkTextArea.setEditable(false);
        authorTextField.setEditable(false);
        dateTimeTextField.setEditable(false);
        typeTextField.setEditable(false);
        mainTextTextArea.setEditable(false);
        descriptionTextArea.setEditable(false);
        
        showContentButton.setVisible(false);
        mainTextTextArea.setLineWrap(true);
        descriptionTextArea.setLineWrap(true);
        imgDescription.setLineWrap(true);
        backwardButton.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        openSearchButton = new javax.swing.JButton();
        contentPanel = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        linkTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        titleTextArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        dateTimeTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        authorTextField = new javax.swing.JTextField();
        typeTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        mainTextTextArea = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        photoPreview = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        imgDescription = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        forwardButton = new javax.swing.JButton();
        backwardButton = new javax.swing.JButton();
        imageDownloadButton = new javax.swing.JButton();
        textDownloadButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        showContentButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        dynamicPanel = new javax.swing.JPanel();
        tablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listTable = new javax.swing.JTable();
        titleLabel = new javax.swing.JLabel();
        searchPanel = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        titleSearchTextField = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        authorSearchTextField = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        crawlStartDateChooser = new com.toedter.calendar.JDateChooser();
        crawlEndDateChooser = new com.toedter.calendar.JDateChooser();
        startDateTimeChooser = new com.toedter.calendar.JDateChooser();
        endDateTimeChooser = new com.toedter.calendar.JDateChooser();
        resetButton = new javax.swing.JButton();
        typeComboBox = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        resultPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        openSearchButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        openSearchButton.setText("Tìm kiếm");
        openSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openSearchButtonActionPerformed(evt);
            }
        });
        add(openSearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 610, -1, -1));

        contentPanel.setBackground(new java.awt.Color(255,255,255,200));
        contentPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(102, 0, 0), null, null));
        contentPanel.setOpaque(false);

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255,255,255,100));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        linkTextArea.setColumns(20);
        linkTextArea.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        linkTextArea.setRows(5);
        linkTextArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane3.setViewportView(linkTextArea);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 350, 46));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Link:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane4.setToolTipText("");
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        titleTextArea.setColumns(20);
        titleTextArea.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        titleTextArea.setRows(5);
        titleTextArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane4.setViewportView(titleTextArea);

        jPanel2.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 350, 46));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Tiêu đề:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        dateTimeTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel2.add(dateTimeTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 350, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Ngày đăng:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Tác giả:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 60, -1));

        authorTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel2.add(authorTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, 150, -1));

        typeTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel2.add(typeTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 200, 130, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Chủ đề:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, -1, -1));

        descriptionTextArea.setColumns(20);
        descriptionTextArea.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        descriptionTextArea.setRows(5);
        descriptionTextArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane5.setViewportView(descriptionTextArea);

        jPanel2.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, 350, 78));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Mô tả:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Nội dung:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, -1, -1));

        mainTextTextArea.setColumns(20);
        mainTextTextArea.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mainTextTextArea.setRows(5);
        mainTextTextArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane6.setViewportView(mainTextTextArea);

        jPanel2.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 420, 360));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Ảnh:");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 710, -1, -1));

        jScrollPane7.setViewportView(photoPreview);

        jPanel2.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 730, 420, 340));

        imgDescription.setColumns(20);
        imgDescription.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        imgDescription.setRows(5);
        imgDescription.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane8.setViewportView(imgDescription);

        jPanel2.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 1100, 430, 70));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Mô tả ảnh:");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 1080, -1, -1));

        forwardButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        forwardButton.setText(">>");
        forwardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardButtonActionPerformed(evt);
            }
        });
        jPanel2.add(forwardButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 1180, -1, -1));

        backwardButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        backwardButton.setText("<<");
        backwardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backwardButtonActionPerformed(evt);
            }
        });
        jPanel2.add(backwardButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 1180, -1, -1));

        imageDownloadButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        imageDownloadButton.setText("Download ảnh");
        imageDownloadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageDownloadButtonActionPerformed(evt);
            }
        });
        jPanel2.add(imageDownloadButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 1210, 190, -1));

        textDownloadButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textDownloadButton.setText("Download bài báo");
        textDownloadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textDownloadButtonActionPerformed(evt);
            }
        });
        jPanel2.add(textDownloadButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 1210, 190, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel13.setText("Nội dung bài báo");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 460, 1240));

        jLabel12.setBackground(new java.awt.Color(255,255,255,200));
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 1240));

        contentPanel.setViewportView(jPanel1);

        add(contentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 0, 470, 640));

        showContentButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        showContentButton.setText("Hiển thị nội dung");
        showContentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showContentButtonActionPerformed(evt);
            }
        });
        add(showContentButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 610, -1, -1));

        refreshButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        refreshButton.setText("Tải lại");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });
        add(refreshButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 610, -1, -1));

        dynamicPanel.setBackground(new java.awt.Color(255,255,255,200));
        dynamicPanel.setLayout(new java.awt.CardLayout());

        tablePanel.setBackground(new java.awt.Color(255,255,255,200));

        jScrollPane1.setBackground(new java.awt.Color(255,255,255,200));

        listTable.setBackground(new java.awt.Color(255,255,255,200));
        listTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        listTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Tiêu đề", "Ngày thêm"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listTable);
        if (listTable.getColumnModel().getColumnCount() > 0) {
            listTable.getColumnModel().getColumn(0).setMinWidth(500);
            listTable.getColumnModel().getColumn(0).setPreferredWidth(500);
            listTable.getColumnModel().getColumn(0).setMaxWidth(500);
        }

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titleLabel.setText("Danh sách trang web đã crawl");

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titleLabel)
                .addGap(311, 311, 311))
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
                .addContainerGap())
        );

        dynamicPanel.add(tablePanel, "card1");

        searchPanel.setBackground(new java.awt.Color(255,255,255,200));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Đến ngày:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Tên bài báo:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Đến ngày:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Tên tác giả:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Từ ngày:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Thời gian Crawl bài báo:");

        titleSearchTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Ngày đăng bài báo:");

        authorSearchTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Từ ngày:");

        searchButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchButton.setText("Tìm kiếm");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel22.setText("Tìm kiếm bài báo");

        exitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        exitButton.setText("Thoát");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        resetButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        typeComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Thời sự", "Thế giới", "Kinh doanh", "Giải trí", "Thể thao", "Pháp luật", "Giáo dục", "Sức khỏe", "Đời sống", "Du lịch", "Khoa học", "Số hóa", "Xe", "Ý kiến", "Tâm sự", "Hài", " " }));
        typeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboBoxActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText("Thể loại:");

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel15))
                                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(searchPanelLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(titleSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(authorSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel20))
                                .addGap(26, 26, 26)
                                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(searchPanelLayout.createSequentialGroup()
                                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(searchPanelLayout.createSequentialGroup()
                                                .addComponent(jLabel18)
                                                .addGap(18, 18, 18)
                                                .addComponent(crawlStartDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(searchPanelLayout.createSequentialGroup()
                                                .addComponent(jLabel21)
                                                .addGap(18, 18, 18)
                                                .addComponent(startDateTimeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(10, 10, 10)
                                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel16))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(crawlEndDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(endDateTimeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(searchPanelLayout.createSequentialGroup()
                                        .addComponent(resetButton)
                                        .addGap(29, 29, 29)
                                        .addComponent(searchButton)
                                        .addGap(27, 27, 27)
                                        .addComponent(exitButton))))
                            .addComponent(jLabel23))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addGap(14, 14, 14)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(titleSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(authorSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel19)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel20))
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel18)
                                .addComponent(jLabel14))
                            .addComponent(crawlStartDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(crawlEndDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel21)
                                .addComponent(jLabel16))
                            .addComponent(startDateTimeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(endDateTimeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchButton)
                    .addComponent(exitButton)
                    .addComponent(resetButton))
                .addContainerGap(263, Short.MAX_VALUE))
        );

        dynamicPanel.add(searchPanel, "card2");

        resultPanel.setBackground(new java.awt.Color(255,255,255,200));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Kết quả tìm kiếm");

        jScrollPane2.setBackground(new java.awt.Color(255,255,255,200));

        resultTable.setBackground(new java.awt.Color(255,255,255,200));
        resultTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Tiêu đề", "Ngày thêm"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resultTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(resultTable);
        if (resultTable.getColumnModel().getColumnCount() > 0) {
            resultTable.getColumnModel().getColumn(0).setMinWidth(500);
            resultTable.getColumnModel().getColumn(0).setPreferredWidth(500);
            resultTable.getColumnModel().getColumn(0).setMaxWidth(500);
        }

        javax.swing.GroupLayout resultPanelLayout = new javax.swing.GroupLayout(resultPanel);
        resultPanel.setLayout(resultPanelLayout);
        resultPanelLayout.setHorizontalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultPanelLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        resultPanelLayout.setVerticalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
                .addContainerGap())
        );

        dynamicPanel.add(resultPanel, "card3");

        add(dynamicPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 680, 590));
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1170, 640));
    }// </editor-fold>//GEN-END:initComponents

    private void imageDownloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageDownloadButtonActionPerformed
//        System.out.println(path);
        JFileChooser fc = new JFileChooser();   
        fc.setDialogTitle("Lưu ảnh");
        int returnVal = fc.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File fi = fc.getSelectedFile();
            BufferedImage image =null;
            try{
                URL url =new URL(path);
                image = ImageIO.read(url);
                ImageIO.write(image, "jpg",new File(fi.getPath()+".jpg"));
            }catch(IOException e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_imageDownloadButtonActionPerformed

    private void listTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel df = (DefaultTableModel) listTable.getModel();
        int index=listTable.getSelectedRow();
        title=(String)df.getValueAt(index, 0);
        date=(String)df.getValueAt(index, 1);
        if(index>=0){
            showContentButton.setVisible(true);
        }
    }//GEN-LAST:event_listTableMouseClicked

    private void showContentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showContentButtonActionPerformed
        // TODO add your handling code here:
        i=0;
        contentPanel.setVisible(true);
        mainTextTextArea.setText("");
        photoPreview.setIcon(null);
        photoPreview.setText("");
        forwardButton.setEnabled(true);
        backwardButton.setEnabled(true);
        
        Info = control.getNewsFromTitleAndDate(title, date);
        titleTextArea.setText(Info.getTitle());
        linkTextArea.setText(Info.getWebsite());
        authorTextField.setText(Info.getAuthor());
        dateTimeTextField.setText(Info.getDatetime());
        typeTextField.setText(Info.getType());
        descriptionTextArea.setText(Info.getDescription());
        for(int i = 0; i<Info.getMainText().size(); i++){            
            mainTextTextArea.append(Info.getMainText().get(i)+"\n");
            mainTextTextArea.append("\n");
        }
        keys = new ArrayList(Info.getImgLink().keySet());
        imgDescription.setText(keys.get(i));
        backwardButton.setEnabled(false);
        try {
            if(keys.size()==1){
                forwardButton.setEnabled(false);
            }
            path = Info.getImgLink().get(keys.get(i));
            URL link = new URL(path);
            BufferedImage image = ImageIO.read(link);
            photoPreview.setIcon(new ImageIcon(image));
            imageDownloadButton.setEnabled(true);
        } catch (Exception ex) {
            photoPreview.setText("ERROR");
            forwardButton.setEnabled(false);
            imageDownloadButton.setEnabled(false);
        }
    }//GEN-LAST:event_showContentButtonActionPerformed

    private void forwardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardButtonActionPerformed
        // TODO add your handling code here:
        forwardButton.setEnabled(true);
        backwardButton.setEnabled(true);
        i=i+1;
        imgDescription.setText(keys.get(i));
        try {
            path = Info.getImgLink().get(keys.get(i));
            URL link = new URL(path);
            BufferedImage image = ImageIO.read(link);
            photoPreview.setIcon(new ImageIcon(image));
        } catch (Exception ex) {
            photoPreview.setText("ERROR");
        }
        if(i==keys.size()-1){
            forwardButton.setEnabled(false);
            backwardButton.setEnabled(true);
        }
    }//GEN-LAST:event_forwardButtonActionPerformed

    private void backwardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backwardButtonActionPerformed
        // TODO add your handling code here:
        backwardButton.setEnabled(true);
        forwardButton.setEnabled(true);
        i=i-1;
        imgDescription.setText(keys.get(i));
        try {
            path = Info.getImgLink().get(keys.get(i));
            URL link = new URL(path);
            BufferedImage image = ImageIO.read(link);
            photoPreview.setIcon(new ImageIcon(image));
        } catch (Exception ex) {
            photoPreview.setText("ERROR");
        }
        if(i==0){
            backwardButton.setEnabled(false);
            forwardButton.setEnabled(true);
        }
    }//GEN-LAST:event_backwardButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        updateTable();
        cardLayout.show(dynamicPanel, "card1");
        showContentButton.setVisible(false);
        i=0;
        contentPanel.setVisible(false);
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void openSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openSearchButtonActionPerformed
        // TODO add your handling code here:
        cardLayout.show(dynamicPanel, "card2");
        showContentButton.setVisible(false);
        i=0;
        contentPanel.setVisible(false);
        openSearchButton.setVisible(false);
        refreshButton.setVisible(false);
        reset();
    }//GEN-LAST:event_openSearchButtonActionPerformed

    private void textDownloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textDownloadButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();   
        fc.setDialogTitle("Lưu nội dung bài báo");
        int returnVal = fc.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File fi = fc.getSelectedFile();
            try{
                FileWriter fw = new FileWriter(fi.getPath()+".txt", StandardCharsets.UTF_8);
                fw.write("Website URL: "+Info.getWebsite()+"\r\n");
                fw.write("Crawl date: "+Info.getCrawlDate()+"\r\n");
                fw.write("News date: "+Info.getDatetime()+"\r\n");
                fw.write("News title: "+Info.getTitle()+"\r\n");
                fw.write("Author: "+Info.getAuthor()+"\r\n");
                fw.write("Type: "+Info.getType()+"\r\n");
                fw.write("Description: "+Info.getDescription()+"\r\n");
                fw.write("\r\n");
                for(int i=0; i<Info.getMainText().size()/*Info.MainText.size()*/; i++){
                    fw.write(Info.getMainText().get(i)+"\r\n");
                    fw.write("\r\n");
                }
                fw.flush();
                fw.close();
            }catch(Exception ex){

            }
        }
    }//GEN-LAST:event_textDownloadButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        cardLayout.show(dynamicPanel, "card1");
        openSearchButton.setVisible(true);
        refreshButton.setVisible(true);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy hh:mm:ss");
        String title = titleSearchTextField.getText();
        String author = authorSearchTextField.getText();
        String type = (String)typeComboBox.getSelectedItem();
        Date startCrawlDate = crawlStartDateChooser.getDate();
        String startCrawlDateString;
        if(startCrawlDate == null){
            startCrawlDateString="null";
        }else{
            startCrawlDateString=dateFormat.format(startCrawlDate);
        }
        Date endCrawlDate = crawlEndDateChooser.getDate();
        String endCrawlDateString;
        if(endCrawlDate == null){
            endCrawlDateString="null";
        }else{
            endCrawlDateString=dateFormat.format(endCrawlDate);
        }
        Date startDateTime = startDateTimeChooser.getDate();
        String startDateTimeString;
        if(startDateTime == null){
            startDateTimeString="null";
        }else{
            startDateTimeString=dateFormat.format(startDateTime);
        }
        Date endDateTime = endDateTimeChooser.getDate();
        String endDateTimeString;
        if(endDateTime == null){
            endDateTimeString="null";
        }else{
            endDateTimeString=dateFormat.format(endDateTime);
        }
        
        
        ArrayList<News> Result = func.Find(title, author, type, startCrawlDateString, endCrawlDateString, startDateTimeString, endDateTimeString);
        ArrayList<ArrayList<String>> result = func.convertResult(Result);
        updateSearchResult(result);
        reset();
        cardLayout.show(dynamicPanel, "card3");
        openSearchButton.setVisible(true);
        refreshButton.setVisible(true);
    }//GEN-LAST:event_searchButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void resultTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel df = (DefaultTableModel) resultTable.getModel();
        int index=resultTable.getSelectedRow();
        title=(String)df.getValueAt(index, 0);
        date=(String)df.getValueAt(index, 1);
        if(index>=0){
            showContentButton.setVisible(true);
        }
    }//GEN-LAST:event_resultTableMouseClicked

    private void typeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField authorSearchTextField;
    private javax.swing.JTextField authorTextField;
    private javax.swing.JButton backwardButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JScrollPane contentPanel;
    private com.toedter.calendar.JDateChooser crawlEndDateChooser;
    private com.toedter.calendar.JDateChooser crawlStartDateChooser;
    private javax.swing.JTextField dateTimeTextField;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JPanel dynamicPanel;
    private com.toedter.calendar.JDateChooser endDateTimeChooser;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton forwardButton;
    private javax.swing.JButton imageDownloadButton;
    private javax.swing.JTextArea imgDescription;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextArea linkTextArea;
    private javax.swing.JTable listTable;
    private javax.swing.JTextArea mainTextTextArea;
    private javax.swing.JButton openSearchButton;
    private javax.swing.JLabel photoPreview;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JPanel resultPanel;
    private javax.swing.JTable resultTable;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JButton showContentButton;
    private com.toedter.calendar.JDateChooser startDateTimeChooser;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JButton textDownloadButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField titleSearchTextField;
    private javax.swing.JTextArea titleTextArea;
    private javax.swing.JComboBox<String> typeComboBox;
    private javax.swing.JTextField typeTextField;
    // End of variables declaration//GEN-END:variables
}
