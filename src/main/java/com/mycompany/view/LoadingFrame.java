/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.view;

import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.net.URL;
import java.net.URLConnection;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;

/**
 *
 * @author Vu
 */
public class LoadingFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public LoadingFrame() {
        initComponents();
        this.setTitle("VNExpress Crawler");
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }

    class jPanelGradient extends JPanel{
        protected void paintComponent(Graphics g){
            Graphics2D g2d = (Graphics2D) g;
            int width = getWidth();
            int height = getHeight();
            
            Color color1 = new Color(229,93,135);
            Color color2 = new Color(95,195,228);
            GradientPaint gp = new GradientPaint(0, 0, color1, width, height, color2);
            g2d.setPaint(gp);
            g2d.fillRect(0, 0, width, height);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new jPanelGradient();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();
        taskLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 28)); // NOI18N
        jLabel2.setText("Loading ...");

        taskLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        taskLabel.setText("Vui lòng chờ trong khoảng vài giây để kiểm tra tín hiệu mạng");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(taskLabel)
                        .addGap(0, 32, Short.MAX_VALUE)))
                .addGap(33, 33, 33))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(15, 15, 15)
                .addComponent(taskLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoadingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoadingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoadingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoadingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new LoadingFrame().setVisible(true);
//            }
//        });
         LoadingFrame frame = new LoadingFrame();
         frame.setVisible(true);
//         Thread t1=new Thread() {
//            public void run() {
//                new MainFrame().setVisible(true);
//            }
//         };
//         try{
//             for(int i=0; i<=100; i++){
//                 if(i<5){
//                    Thread.sleep(500);
//                    frame.jProgressBar1.setValue(i);
//                    frame.loadingLabel.setText(i+"%");
//                 }
//                 if(i>=5){
//                    Thread.sleep(50);
//                    frame.jProgressBar1.setValue(i);
//                    frame.loadingLabel.setText(i+"%"); //Hiện tại đã xóa, nếu muốn chạy đoạn code này thì phải tạo thêm jLabel loadingLabel
//                 }
//                 if(i==5){
//                    URL url = new URL("http://www.google.com");
//                    URLConnection connection = url.openConnection();
//                    connection.connect();
//                    frame.taskLabel.setText("Vui lòng chờ khoảng vài giây để thiết lập phần mềm");
//                    t1.start();
//                 }
//                 frame.toFront();
//             }
//             frame.dispose();
//         }catch(Exception e){
//             Object[] Option = {"OK"};
//             int n = JOptionPane.showOptionDialog(null, "Vui lòng kiểm tra tín hiệu mạng và khởi động lại phần mềm", "Thất bại", JOptionPane.YES_OPTION, JOptionPane.ERROR_MESSAGE, null, Option, Option[0]); 
//             if(n==JOptionPane.YES_OPTION){
//                 System.exit(0);
//             }else if(n==JOptionPane.CLOSED_OPTION){
//                 System.exit(0);
//             }
//         }
        
         try{
            frame.toFront();
            frame.jProgressBar1.setIndeterminate(true);
            URL url = new URL("http://www.google.com");
            URLConnection connection = url.openConnection();
            connection.connect();
            frame.taskLabel.setText("Vui lòng chờ khoảng vài giây để thiết lập phần mềm");
            new MainFrame().setVisible(true);
            frame.dispose();
         }catch(Exception e){
             Object[] Option = {"OK"};
             int n = JOptionPane.showOptionDialog(null, "Vui lòng kiểm tra tín hiệu mạng và khởi động lại phần mềm", "Thất bại", JOptionPane.YES_OPTION, JOptionPane.ERROR_MESSAGE, null, Option, Option[0]); 
             if(n==JOptionPane.YES_OPTION){
                 System.exit(0);
             }else if(n==JOptionPane.CLOSED_OPTION){
                 System.exit(0);
             }
         }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel taskLabel;
    // End of variables declaration//GEN-END:variables
}
